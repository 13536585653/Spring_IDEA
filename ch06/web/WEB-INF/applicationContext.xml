<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--*****************以下是spring整合jdbc和Struts2的配置*********************-->

    <!--配置数据源DataSource，由spring来管理和维护，
    使用spring提供的DriverManagerDataSource，
    然后给这个对象注入相应的jdbc连接属性-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--注入相应的jdbc连接属性,这里所有的name属性的值都是在
        DriverManagerDataSource中的实例变量，并提供了set方法，因此可以注入-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="123"/>
    </bean>

    <!--使用spring提供的jdbc模板，他实现了对jdbc的封装，简化了我们的开发-->
    <bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--这个模板有一个DataSource的属性，需要我们注入一个数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--装配dao-->
    <bean id="userDao" class="org.ch06.dao.UserDaoImpl">
        <!--将模板注入到dao中,其实是注入到jdbcDaoSupport父类中，在子类中就可以使用了-->
        <property name="jdbcTemplate" ref="template"/>
    </bean>
    <bean id="addrDao" class="org.ch06.dao.AddrDaoImpl">
        <property name="jdbcTemplate" ref="template"/>
    </bean>
    <!--装配service-->
    <bean id="userService" class="org.ch06.service.UserServiceImpl">
        <!--给service注入dao-->
        <property name="dao" ref="userDao"/>
    </bean>
    <!--装配action-->
    <bean id="userAction" class="org.ch06.action.UserAction">
        <!--给action注入service-->
        <property name="service" ref="userService"/>
    </bean>
</beans>